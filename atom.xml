<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PENG&#39;s Blog</title>
  
  <subtitle>不写点东西，时间久了总是会忘记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://peng-fan.github.io/"/>
  <updated>2020-05-02T13:14:13.073Z</updated>
  <id>https://peng-fan.github.io/</id>
  
  <author>
    <name>Peng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux Qt环境搭建</title>
    <link href="https://peng-fan.github.io/2020/05/02/linux-Qt%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://peng-fan.github.io/2020/05/02/linux-Qt%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-05-02T13:13:32.000Z</published>
    <updated>2020-05-02T13:14:13.073Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>目前写代码还是觉得Qt比较方便，代码提示很完善，构建工程又非常灵活，所以暂时是最佳选择了。记录一下在Ubuntu安装Qt的步骤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">系统信息：18.04.2-Ubuntu</span><br></pre></td></tr></table></figure><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><p>将系统的软件列表和软件更新到最新状态，以保证能够安装最新版本的软件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apg-get ugrade</span><br></pre></td></tr></table></figure><h3 id="安装build-essential"><a href="#安装build-essential" class="headerlink" title="安装build-essential"></a>安装build-essential</h3><p>build-essential是Ubuntu默认的meta-package，包含了GCC编译器以及相关的库文件，包括了gcc、g++、make等，执行命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure><h3 id="安装Qt"><a href="#安装Qt" class="headerlink" title="安装Qt"></a>安装Qt</h3><p>直接在线安装Qt,命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install qtcreator</span><br><span class="line">sudo apt-get install qt5-default</span><br></pre></td></tr></table></figure><h3 id="安装CMake"><a href="#安装CMake" class="headerlink" title="安装CMake"></a>安装CMake</h3><p>构建工具选择CMake,默认的QMake也可以的，看个人选择。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cmake</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>安装完成后，直接终端输入<em>qtcreator</em>就可以运行，之后选择创建一个C语言工程，选择CMake构建，运行示例如下：<br><img src="/2020/05/02/linux-Qt%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/run-test.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;目前写代码还是觉得Qt比较方便，代码提示很完善，构建工程又非常灵活，所以暂时是最佳选择了。记录一下在Ubuntu安装Qt的步骤。&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>必备工具</title>
    <link href="https://peng-fan.github.io/2020/05/02/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7/"/>
    <id>https://peng-fan.github.io/2020/05/02/%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7/</id>
    <published>2020-05-02T11:43:57.000Z</published>
    <updated>2020-05-02T11:43:57.999Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>关于Sort函数的第三个参数必须是类的静态成员的思考</title>
    <link href="https://peng-fan.github.io/2020/04/27/CPP-Sort%E5%87%BD%E6%95%B0%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%8F%82%E6%95%B0%E5%BF%85%E9%A1%BB%E6%98%AF%E7%B1%BB%E7%9A%84%E9%9D%99%E6%80%81%E6%88%90%E5%91%98/"/>
    <id>https://peng-fan.github.io/2020/04/27/CPP-Sort%E5%87%BD%E6%95%B0%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%8F%82%E6%95%B0%E5%BF%85%E9%A1%BB%E6%98%AF%E7%B1%BB%E7%9A%84%E9%9D%99%E6%80%81%E6%88%90%E5%91%98/</id>
    <published>2020-04-27T15:22:53.000Z</published>
    <updated>2020-04-28T15:55:13.012Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题起因"><a href="#问题起因" class="headerlink" title="问题起因"></a>问题起因</h3><p>定义class时，使用了sort排序的其第三个参数comp，传入自己定义的比较功能，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class TestSort &#123;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    void test(vector&lt;int&gt;&amp; v) &#123;</span><br><span class="line"></span><br><span class="line">        sort(v.begin(), v.end(), compareFunc);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">private:</span><br><span class="line">    bool compareFunc(vector&lt;int&gt; a, vector&lt;int&gt; b) &#123;</span><br><span class="line">        return a &gt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这时编译时报了一个错误如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: must use &#39;.*&#39; or &#39;-&gt;*&#39; to call pointer-to-member function in ...</span><br></pre></td></tr></table></figure><p>从错误的提示可以分析是访问了指针成员，但是没有使用“ .* ”或者 “ -&gt;*”,那就是可能传递的参数不对。</p><h3 id="问题剖析"><a href="#问题剖析" class="headerlink" title="问题剖析"></a>问题剖析</h3><p>接下来先看下sort函数的原型定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">template &lt;class RandomAccessIterator, class Compare&gt;</span><br><span class="line">void sort (RandomAccessIterator first, RandomAccessIterator last, Compare comp);</span><br></pre></td></tr></table></figure><p>使用sort时，如果自己定义第三个参数比较功能，需要传递一个功能指针或者功能对象，如果按照这个定义，上述出现错误的代码并没有错啊，那问题是什么呢？</p><p>其实，class的成员函数如果不使用static修饰，说明其都与特定的对象相关，sort是个全局函数，其中的comp参数，其实是一个函数指针，当被调用时直接通过指针进行访问，但是这时如果调用时传递的是class中的非静态成员函数，访问就会出错，因为没有通过object方式进行调用。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>因此，需要注意的关键点如下：</p><ul><li>sort第三个参数，必须是全局函数或者类的静态成员函数；</li><li>类的静态成员函数内部不能访问，类的其他成员，因为没有this指针；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题起因&quot;&gt;&lt;a href=&quot;#问题起因&quot; class=&quot;headerlink&quot; title=&quot;问题起因&quot;&gt;&lt;/a&gt;问题起因&lt;/h3&gt;&lt;p&gt;定义class时，使用了sort排序的其第三个参数comp，传入自己定义的比较功能，&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
    
      <category term="C++" scheme="https://peng-fan.github.io/categories/C/"/>
    
    
      <category term="C++" scheme="https://peng-fan.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令</title>
    <link href="https://peng-fan.github.io/2020/01/03/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://peng-fan.github.io/2020/01/03/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-01-03T06:07:17.171Z</published>
    <updated>2020-05-02T13:15:14.213Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="博客搭建" scheme="https://peng-fan.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://peng-fan.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
